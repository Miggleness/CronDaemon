<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
<!-- 
	Good Refernece for this MSBuild Inline Tasks:
	http://msdn.microsoft.com/en-us/library/dd723643.aspx
	Note: Inline Tasks are only supported in .NET Framework v4.
-->
	<UsingTask
		TaskName="ZipFile"
		TaskFactory="CodeTaskFactory"
		AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" 
	>
		<ParameterGroup>
			<BaseDir ParameterType="System.String" Required="True" />
			<Files ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="True" />
			<ZipFileName ParameterType="System.String" Required="True" />
		</ParameterGroup>
		<Task>
			<Reference Include="$(MSBuildToolsPath)\System.IO.Compression.dll"/>
			<Reference Include="$(MSBuildToolsPath)\System.IO.Compression.FileSystem.dll"/>
			<Using Namespace="System"/>
			<Using Namespace="System.IO"/>
			<Using Namespace="System.IO.Compression"/>
			<Code Type="Fragment" Language="cs">
			<![CDATA[

			var cmp = StringComparison.InvariantCultureIgnoreCase;
			using (var fs = new FileStream(ZipFileName, FileMode.Create))
			using (var zip = new ZipArchive(fs, ZipArchiveMode.Create))
			{
				foreach (var sourceItem in Files)
				{
					var path = sourceItem.ItemSpec;
					if (Directory.Exists(path))
					{
						foreach (var file in Directory.EnumerateFiles(path, "*.*", SearchOption.AllDirectories))
						{
							if (string.Equals(file, ZipFileName, cmp)) continue;
							var entryName = file.Substring(BaseDir.Length).TrimStart(new[]{'\\', '/'});
							zip.CreateEntryFromFile(file, entryName);
						}
					}
					else
					{
						if (string.Equals(path, ZipFileName, cmp)) continue;
						var entryName = path.Substring(BaseDir.Length).TrimStart(new[]{'\\', '/'});
						zip.CreateEntryFromFile(path, entryName);
					}
				}
			}
            
			]]>
			</Code>
		</Task>
	</UsingTask>

</Project>